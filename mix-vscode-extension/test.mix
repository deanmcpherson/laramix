<mix lang="tsx">
interface User {
    name: string;
    age: number;
}

const user: User = {
    name: "John",
    age: 30
};

function greet(user: User) {
    return <div>Hello {user.name}!</div>;
}
</mix>

<mix lang="php">
<?php
class UserController {
    private $db;
    
    public function __construct() {
        $this->db = new PDO('mysql:host=localhost;dbname=test', 'user', 'pass');
    }

    public function getUser($id) {
        $stmt = $this->db->prepare('SELECT * FROM users WHERE id = ?');
        $stmt->execute([$id]);
        return $stmt->fetch(PDO::FETCH_ASSOC);
    }
}
</mix>

<mix lang="css">
.user-profile {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    background-color: #f5f5f5;
    border-radius: 8px;
}

.user-name {
    color: #333;
    font-size: 1.2em;
    font-weight: bold;
}
</mix>

<mix lang="javascript">
function validateUser(user) {
    if (!user.name || typeof user.name !== 'string') {
        throw new Error('Invalid name');
    }
    
    if (!Number.isInteger(user.age) || user.age < 0) {
        throw new Error('Invalid age');
    }
    
    return true;
}

// Test async functionality
async function fetchUser(id) {
    const response = await fetch(`/api/users/${id}`);
    return response.json();
}
</mix>

<mix lang="python">
from typing import Dict, Optional
import json

class UserService:
    def __init__(self):
        self.users: Dict[int, dict] = {}
    
    def add_user(self, user_id: int, name: str, age: int) -> None:
        self.users[user_id] = {
            "name": name,
            "age": age
        }
    
    def get_user(self, user_id: int) -> Optional[dict]:
        return self.users.get(user_id)
</mix>

<mix lang="html">
<div class="user-card">
    <header class="card-header">
        <h2>User Profile</h2>
    </header>
    <div class="card-body">
        <form id="user-form">
            <label for="name">Name:</label>
            <input type="text" id="name" required>
            
            <label for="age">Age:</label>
            <input type="number" id="age" required>
            
            <button type="submit">Save</button>
        </form>
    </div>
</div>
</mix> 